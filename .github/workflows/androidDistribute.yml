name: Android Distribute

on: 
  workflow_dispatch:
    inputs:
        tag:
          description: "Version's name"
          require: true
        bodyTag:
           description: "Descrption of tag" 

jobs:
  build:
    name: Create Android APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta'
    - run: flutter pub get
    #- run: flutter test
    - name: Download Android keystore
      id: android_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
    - name: Create key.properties
      run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
    - name: Decode google-services.json
      env:
        FIREBASE_API_ANDROID: ${{ secrets.FIREBASE_API_ANDROID }}
      run: echo $FIREBASE_API_ANDROID > /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/android/app/google-services.json
    - name: Android NDK toolchain Setup
      uses: ravinderjangra/android-ndk-toolchain-setup@0.1
      with: 
        api: '22'
        arch: 'arm'
        install-location: 'toolchains'      
    - run: flutter build apk
    - name: Upload APK
      uses: actions/upload-artifact@master
      with:
        name: apk-build
        path: build/app/outputs/apk/release
  deploy:
    needs: [build]
    name: Deploy APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Download Artifact
      uses: actions/download-artifact@master
      with:
        name: apk-build
    - name: upload artifact to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{secrets.FIREBASE_APP_ID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        groups: Dipendenti
        file: build/app/outputs/apk/release/*.apk
  version:
    needs: [deploy]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.bodyTag }}
          draft: false
          prerelease: false
