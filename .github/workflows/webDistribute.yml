name: Web Distribute

on: 
  workflow_dispatch:
    inputs:
        tag:
          description: "Version's name"
          require: true
        bodyTag:
           description: "Descrption of tag" 

jobs:
  build:
    name: Create Web Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta'
    - run: flutter config --enable-web
    - run: flutter pub get
    #- run: flutter test
    - run: flutter build web
    - name: Upload Build Web
      uses: actions/upload-artifact@master
      with:
        name: web-build
        path: build/web
  deploy:
    needs: [build]
    name: Deploy Web Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Download Web Build
      uses: actions/download-artifact@master
      with:
        name: web-build
        path: build/web
    - name: Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
          args: deploy --only hosting
      env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_WEB_ID }}  
  version:
    needs: [deploy]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Web Build
        uses: actions/download-artifact@master
        with:
            name: web-build 
            path: build/web
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.bodyTag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/web/web-build.zip
          asset_name: web-build.zip
          asset_content_type: application/zip 
