name: iOS Distribute

on: 
  workflow_dispatch:
    inputs:
        tag:
          description: "Version's name"
          require: true
        bodyTag:
           description: "Descrption of tag" 

jobs:
  build:
    name: Create iOS iPA
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - run: flutter pub get
    #- run: flutter test
    - run: flutter clean
    - name: Decode GoogleService-Info
      env:
        FIREBASE_API_IOS: ${{ secrets.FIREBASE_API_IOS }}
      run: echo $FIREBASE_API_IOS > /Users/runner/work/Flutter_organizer-app/Flutter_organizer-app/ios/Runner/GoogleService-Info.plist
    
    - run: flutter build ios --release --no-codesign
    - name: Upload iPA
      uses: actions/upload-artifact@master
      with:
        name: ios-build
        path: build/ios/iphoneos
  deploy:
    needs: [build]
    name: Deploy iPA
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Download Artifact
      uses: actions/download-artifact@master
      with:
        name: ios-build
    - name: Decode Firebase credentials distributiion
      run: |
          echo "$FIREBASE_CREDENTIALS_DISTRIBUTE_BASE64" > firebase_credentials.json.b64
          base64 -d -i firebase_credentials.json.b64 > /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/firebase_credentials.json
      env:
          FIREBASE_CREDENTIALS_DISTRIBUTE_BASE64: ${{ secrets.FIREBASE_CREDENTIALS_DISTRIBUTE_BASE64 }}
    - run: less /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/firebase_credentials.json
    - run: ls  /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/
    - run: mkdir -p /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload
    - run: mv /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Runner.app /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload
    - run: zip -r -y /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload.zip  /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload
    - run: mv  /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload.zip /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload.ipa
    - name: upload artifact to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{secrets.FIREBASE_APP_IOS_ID}}
        serviceCredentialsFile: /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/firebase_credentials.json
        groups: Dipendenti iOS
        file: /home/runner/work/Flutter_organizer-app/Flutter_organizer-app/Payload.ipa
  version:
    needs: [deploy]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.bodyTag }}
          draft: false
          prerelease: false
